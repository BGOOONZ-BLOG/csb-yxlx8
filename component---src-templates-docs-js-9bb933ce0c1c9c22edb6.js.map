{"version":3,"sources":["webpack:///./src/templates/docs.js"],"names":["Docs","render","child_pages","has_children","root_docs_path","this","props","current_page_url","className","page","pageContext","site","htmlToReact","getPages","pages","Fragment","id","child_page","child_page_idx","key","to","withPrefix","aria-hidden","React","Component"],"mappings":"4TAkBqBA,E,kGACjBC,OAAA,WAAU,IAgBgBC,EAEAC,EAlBjB,OACDC,EAAiB,IAAO,IAAMC,KAAKC,MAAO,oDAAqD,MAAO,KACtGC,EAAmB,IAAO,IAAMF,KAAKC,MAAO,kBAAmB,MAAO,KAC1E,OACI,kBAAC,IAAWD,KAAKC,MACjB,yBAAKE,UAAU,eACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,iBAAcH,KAAKC,MAAnB,CAA0BG,KAAMJ,KAAKC,MAAMI,YAAaC,KAAMN,KAAKC,MAAMI,YAAYC,QACrF,6BAASH,UAAU,kBACjB,yBAAKA,UAAU,eACb,4BAAQA,UAAU,eAChB,wBAAIA,UAAU,wBAAwB,IAAMH,KAAKC,MAAO,gCAAiC,QAE3F,yBAAKE,UAAU,gBACZI,YAAY,IAAMP,KAAKC,MAAO,mBAAoB,OACjDF,IAAmBG,IACbL,EAAc,IAAUW,YAAS,EAAKP,MAAMI,YAAYI,MAAOP,GAAmB,sBAElFJ,EADc,IAAOD,GACS,EAC1B,kBAAC,IAAMa,SAAP,KACLZ,GACC,wBAAIa,GAAG,qBAAqBR,UAAU,sBACnC,IAAMN,GAAa,SAACe,EAAYC,GAAb,OACpB,wBAAIC,IAAKD,EAAgBV,UAAU,qBAAoB,kBAAC,IAAD,CAAMY,GAAIC,YAAW,IAAMJ,EAAY,MAAO,OAAQT,UAAU,kBAAkB,IAAMS,EAAY,oBAAqB,MAAM,0BAAMT,UAAU,mBAAmBc,cAAY,oBASrP,yBAAKN,GAAG,WAAWR,UAAU,YAC3B,yBAAKQ,GAAG,kBAAkBR,UAAU,0BAClC,wBAAIA,UAAU,kBAAd,mBACA,yBAAKQ,GAAG,kC,GApCMO,IAAMC","file":"component---src-templates-docs-js-9bb933ce0c1c9c22edb6.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport DocsMenu from '../components/DocsMenu';\nimport {htmlToReact, getPages, Link, withPrefix} from '../utils';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Docs extends React.Component {\n    render() {\n        let root_docs_path = _.trim(_.get(this.props, 'pageContext.site.data.doc_sections.root_docs_path', null), '/');\n        let current_page_url = _.trim(_.get(this.props, 'pageContext.url', null), '/');\n        return (\n            <Layout {...this.props}>\n            <div className=\"inner outer\">\n              <div className=\"docs-content\">\n                <DocsMenu {...this.props} page={this.props.pageContext} site={this.props.pageContext.site} />\n                <article className=\"post type-docs\">\n                  <div className=\"post-inside\">\n                    <header className=\"post-header\">\n                      <h1 className=\"post-title line-left\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                    </header>\n                    <div className=\"post-content\">\n                      {htmlToReact(_.get(this.props, 'pageContext.html', null))}\n                      {(root_docs_path !== current_page_url) && ((() => {\n                          let child_pages = _.orderBy(getPages(this.props.pageContext.pages, current_page_url), 'frontmatter.weight');\n                          let child_count = _.size(child_pages);\n                          let has_children = (child_count > 0) ? (true) : false;\n                          return (<React.Fragment>\n                            {has_children && (\n                              <ul id=\"docs-section-items\" className=\"docs-section-items\">\n                                {_.map(child_pages, (child_page, child_page_idx) => (\n                                <li key={child_page_idx} className=\"docs-section-item\"><Link to={withPrefix(_.get(child_page, 'url', null))} className=\"docs-item-link\">{_.get(child_page, 'frontmatter.title', null)}<span className=\"icon-angle-right\" aria-hidden=\"true\" /></Link></li>\n                                ))}\n                              </ul>\n                            )}\n                          </React.Fragment>);\n                      })())}\n                    </div>\n                  </div>\n                </article>\n                <nav id=\"page-nav\" className=\"page-nav\">\n                  <div id=\"page-nav-inside\" className=\"page-nav-inside sticky\">\n                    <h2 className=\"page-nav-title\">Jump to Section</h2>\n                    <div id=\"page-nav-link-container\" />\n                  </div>\n                </nav>\n              </div>\n            </div>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}