{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["Blog","render","display_posts","getPages","this","props","pageContext","pages","className","style","toStyleObj","withPrefix","post","post_idx","key","to","src","alt","dateTime","moment","strftime","rel","Fragment","React","Component"],"mappings":"2RAkBqBA,E,kGACjBC,OAAA,WAAU,IAAD,OACDC,EAAgB,IAAUC,YAASC,KAAKC,MAAMC,YAAYC,MAAO,SAAU,mBAAoB,QACnG,OACI,kBAAC,IAAWH,KAAKC,MACf,4BAAQG,UAAU,kCACf,IAAMJ,KAAKC,MAAO,gCAAiC,OACpD,yBAAKG,UAAU,SAASC,MAAOC,YAAW,0BAA6BC,YAAW,IAAMP,KAAKC,MAAO,gCAAiC,OAAS,QAE9I,yBAAKG,UAAU,YACb,wBAAIA,UAAU,cAAc,IAAMJ,KAAKC,MAAO,gCAAiC,OAC9E,IAAMD,KAAKC,MAAO,mCAAoC,OACvD,uBAAGG,UAAU,iBAAiB,IAAMJ,KAAKC,MAAO,mCAAoC,SAIxF,yBAAKG,UAAU,kBACb,yBAAKA,UAAU,aACZ,IAAMN,GAAe,SAACU,EAAMC,GAAP,OACtB,6BAASC,IAAKD,EAAUL,UAAU,QAC/B,IAAMI,EAAM,0BAA2B,OACxC,kBAAC,IAAD,CAAMJ,UAAU,iBAAiBO,GAAIJ,YAAW,IAAMC,EAAM,MAAO,QAAQ,yBAAKI,IAAKL,YAAW,IAAMC,EAAM,0BAA2B,OAAQK,IAAK,IAAM,EAAKZ,MAAO,0CAA2C,SAEjN,4BAAQG,UAAU,eAChB,yBAAKA,UAAU,aACb,0BAAMA,UAAU,YAAYU,SAAUC,IAAO,IAAMP,EAAM,mBAAoB,OAAOQ,SAAS,mBAAoBD,IAAO,IAAMP,EAAM,mBAAoB,OAAOQ,SAAS,eAE1K,wBAAIZ,UAAU,wBAAuB,kBAAC,IAAD,CAAMO,GAAIJ,YAAW,IAAMC,EAAM,MAAO,OAAQS,IAAI,YAAY,IAAMT,EAAM,oBAAqB,SAEvI,IAAMA,EAAM,sBAAuB,OAAU,kBAAC,IAAMU,SAAP,KAC1C,uBAAGd,UAAU,gBAAgB,IAAMI,EAAM,sBAAuB,QACQ,IAArE,IAAM,EAAKP,MAAO,wCAAyC,OAAmB,IAAM,EAAKA,MAAO,yCAA0C,OAC7I,uBAAGG,UAAU,aACX,kBAAC,IAAD,CAAMA,UAAU,iBAAiBO,GAAIJ,YAAW,IAAMC,EAAM,MAAO,QAAS,IAAM,EAAKP,MAAO,yCAA0C,iB,GAjChIkB,IAAMC","file":"component---src-templates-blog-js-10599357e1754c9e8612.js","sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport {graphql} from 'gatsby';\n\nimport {Layout} from '../components/index';\nimport {toStyleObj, withPrefix, getPages, Link} from '../utils';\n\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql`\n  query($url: String) {\n    sitePage(path: {eq: $url}) {\n      id\n    }\n  }\n`;\n\nexport default class Blog extends React.Component {\n    render() {\n        let display_posts = _.orderBy(getPages(this.props.pageContext.pages, '/blog'), 'frontmatter.date', 'desc');\n        return (\n            <Layout {...this.props}>\n              <header className=\"page-header has-gradient outer\">\n                {_.get(this.props, 'pageContext.frontmatter.image', null) && (\n                <div className=\"bg-img\" style={toStyleObj('background-image: url(\\'' + withPrefix(_.get(this.props, 'pageContext.frontmatter.image', null)) + '\\')')}/>\n                )}\n                <div className=\"inner-sm\">\n                  <h1 className=\"page-title\">{_.get(this.props, 'pageContext.frontmatter.title', null)}</h1>\n                  {_.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                  <p className=\"page-subtitle\">{_.get(this.props, 'pageContext.frontmatter.subtitle', null)}</p>\n                  )}\n                </div>\n              </header>\n              <div className=\"inner-md outer\">\n                <div className=\"post-feed\">\n                  {_.map(display_posts, (post, post_idx) => (\n                  <article key={post_idx} className=\"post\">\n                    {_.get(post, 'frontmatter.thumb_image', null) && (\n                    <Link className=\"post-thumbnail\" to={withPrefix(_.get(post, 'url', null))}><img src={withPrefix(_.get(post, 'frontmatter.thumb_image', null))} alt={_.get(this.props, 'pageContext.frontmatter.thumb_image_alt', null)} /></Link>\n                    )}\n                    <header className=\"post-header\">\n                      <div className=\"post-meta\">\n                        <time className=\"published\" dateTime={moment(_.get(post, 'frontmatter.date', null)).strftime('%Y-%m-%d %H:%M')}>{moment(_.get(post, 'frontmatter.date', null)).strftime('%B %d, %Y')}</time>\n                      </div>\n                      <h2 className=\"post-title line-left\"><Link to={withPrefix(_.get(post, 'url', null))} rel=\"bookmark\">{_.get(post, 'frontmatter.title', null)}</Link></h2>\n                    </header>\n                    {_.get(post, 'frontmatter.excerpt', null) && (<React.Fragment>\n                        <p className=\"post-excerpt\">{_.get(post, 'frontmatter.excerpt', null)}</p>\n                        {((_.get(this.props, 'pageContext.frontmatter.has_more_link', null) === true) && _.get(this.props, 'pageContext.frontmatter.more_link_text', null)) && (\n                        <p className=\"read-more\">\n                          <Link className=\"read-more-link\" to={withPrefix(_.get(post, 'url', null))}>{_.get(this.props, 'pageContext.frontmatter.more_link_text', null)}</Link>\n                        </p>\n                        )}\n                    </React.Fragment>)}\n                  </article>\n                ))}\n                </div>\n              </div>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}